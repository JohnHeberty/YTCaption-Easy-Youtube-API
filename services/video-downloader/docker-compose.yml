services:
  video-downloader-service:
    build: .
    container_name: video-downloader-api
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      # Monta código fonte para hot reload em desenvolvimento
      - ./app:/app/app
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./user-agents.txt:/app/user-agents.txt
      - ./user-agents-clean.txt:/app/user-agents-clean.txt
      - ./user-agents-original.txt:/app/user-agents-original.txt
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      - "com.example.service=video-downloader"
      - "com.example.version=1.0.0"

  celery-worker:
    build: .
    container_name: video-downloader-celery
    command: celery -A app.celery_tasks worker --loglevel=info --concurrency=2 --pool=solo --max-tasks-per-child=100
    volumes:
      # Monta código fonte para hot reload em desenvolvimento
      - ./app:/app/app
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./user-agents.txt:/app/user-agents.txt
      - ./user-agents-clean.txt:/app/user-agents-clean.txt
      - ./user-agents-original.txt:/app/user-agents-original.txt
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    depends_on:
      - video-downloader-service
    labels:
      - "com.example.service=video-downloader-worker"
      - "com.example.version=1.0.0"