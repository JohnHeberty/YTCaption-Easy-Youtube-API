# Application Settings
APP_NAME=Whisper Transcription API
APP_VERSION=1.0.0
APP_ENVIRONMENT=production

# Server Settings
HOST=0.0.0.0
PORT=8000

# Whisper Settings
# Options: tiny, base, small, medium, large, turbo
# RAM por worker: tiny=~400MB, base=~800MB, small=~1.5GB, medium=~3GB, large=~6GB
WHISPER_MODEL=base              # base=bom equilíbrio qualidade/performance
WHISPER_DEVICE=cpu              # cpu ou cuda (se GPU disponível)
WHISPER_LANGUAGE=auto           # auto=detecção automática, ou pt/en/es/etc

# Parallel Transcription Settings (Persistent Worker Pool)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 🚀 Workers carregam modelo UMA VEZ no startup (speedup 3-5x)
# 📖 Veja docs/10-PARALLEL-ARCHITECTURE.md para arquitetura completa
#
# ⚠️  ATENÇÃO: Requer RAM = (workers × tamanho_modelo) + overhead
#    - tiny:   ~400MB/worker  → 2 workers = ~1GB RAM
#    - base:   ~800MB/worker  → 2 workers = ~2GB RAM  ⭐ RECOMENDADO
#    - small:  ~1.5GB/worker  → 2 workers = ~3.5GB RAM
#    - medium: ~3GB/worker    → 2 workers = ~7GB RAM
#    - large:  ~6GB/worker    → 2 workers = ~13GB RAM
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Ativa/desativa processamento paralelo
# true  = Workers persistentes (modelo carregado 1x, rápido para áudios longos)
# false = Single-core (mais estável, menor uso de RAM)
ENABLE_PARALLEL_TRANSCRIPTION=true

# Número de workers persistentes (processos separados)
# Cada worker carrega modelo Whisper UMA VEZ no startup
# Valores:
#   - 0 = auto-detect (usa número de CPU cores, ALTO USO DE RAM!)
#   - 2 = conservador, bom para 4GB RAM com modelo base  ⭐ RECOMENDADO
#   - 3-4 = ideal para servidores com 8GB+ RAM
#   - 6+ = apenas para servidores dedicados com 16GB+ RAM
PARALLEL_WORKERS=2

# Duração de cada chunk em segundos
# Cada chunk é processado independentemente por um worker
# Valores:
#   - 60s  = chunks curtos, mais paralelismo (overhead alto)
#   - 120s = bom equilíbrio (padrão recomendado)  ⭐ RECOMENDADO
#   - 180s = chunks médios
#   - 300s = chunks longos, menos overhead
PARALLEL_CHUNK_DURATION=120

# Audio Normalization Settings (Advanced)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 🎵 Melhorias de qualidade de áudio antes da transcrição
# 📖 Veja docs/NORMALIZACAO-AUDIO-IMPLEMENTADA.md para detalhes
#
# ⚠️  ATENÇÃO: Cada filtro adiciona ~20-30% de tempo de processamento
#    Mas pode melhorar significativamente a acurácia em áudios ruins!
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Normalização de Volume (Loudness Normalization)
# true  = Equaliza volume entre diferentes áudios (útil para batch processing)
# false = Mantém volume original (padrão para maioria dos casos)
# Casos de uso: áudios muito baixos/altos, múltiplas fontes, podcasts amadores
ENABLE_AUDIO_VOLUME_NORMALIZATION=false

# Remoção de Ruído de Fundo (Noise Reduction)
# true  = Remove frequências fora da faixa de voz humana (200Hz-3000Hz)
# false = Mantém todas as frequências
# Casos de uso: gravações externas, ventilador/AC, microfone de baixa qualidade
ENABLE_AUDIO_NOISE_REDUCTION=false

# YouTube
YOUTUBE_FORMAT=worstaudio
MAX_VIDEO_SIZE_MB=2500                    # Aumentado para suportar vídeos longos
MAX_VIDEO_DURATION_SECONDS=10800          # 3 horas máximo
DOWNLOAD_TIMEOUT=900                      # 15 minutos

# Storage Settings
TEMP_DIR=./temp
CLEANUP_ON_STARTUP=true
CLEANUP_AFTER_PROCESSING=true
MAX_TEMP_AGE_HOURS=24

# API Settings
MAX_CONCURRENT_REQUESTS=3                 # Reduzido para evitar sobrecarga com vídeos longos
REQUEST_TIMEOUT=3600                      # 1 hora para vídeos longos
ENABLE_CORS=true
CORS_ORIGINS=*

# Logging Settings
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=./logs/app.log

# Performance Settings
WORKERS=1
WORKER_CLASS=uvicorn.workers.UvicornWorker
